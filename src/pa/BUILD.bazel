# Copyright lowRISC contributors (OpenTitan project).
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

load("@io_bazel_rules_go//go:def.bzl", "go_binary")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_push")

package(default_visibility = ["//visibility:public"])

# Note: running this target: bazel run //src/pa:pa_server_push
# pushes the `pa_server_image` to the Google Container Registry.
# If you get an error related to the containerregistry API not being
# accessible, you can enable this API using the following cmd-line:
# $ gcloud --project=opentitan-provisioning services enable containerregistry.googleapis.com
container_push(
    name = "pa_server_push",
    format = "Docker",
    image = ":pa_server_image",
    registry = "gcr.io",
    # opentitan-provisioning is the name of the GCP project.
    repository = "opentitan-provisioning/spm_server",
    tag = "dev",
)

PA_SERVER_DEPS = [
    "//src/pa/proto:pa_go_pb",
    "//src/spm/proto:spm_go_pb",
    "//src/proxy_buffer/proto:proxy_buffer_go_pb",
    "//src/pa/services:pa",
    "//src/transport:grpconn",
    "//src/transport/auth_service",
    "//src/utils",
    "@org_golang_google_grpc//:go_default_library",
]

go_binary(
    name = "loadtest",
    srcs = ["loadtest.go"],
    data = [
        "//src/spm/services:testdata",
    ],
    deps = [
        "//src/pa/proto:pa_go_pb",
        "//src/pa/services:pa",
        "//src/proto/crypto:cert_go_pb",
        "//src/proto/crypto:common_go_pb",
        "//src/proto/crypto:ecdsa_go_pb",
        "//src/registry_buffer/proto:registry_buffer_go_pb",
        "//src/spm/proto:spm_go_pb",
        "//src/transport:grpconn",
        "@io_bazel_rules_go//go/tools/bazel",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//metadata",
        "@org_golang_x_sync//errgroup:go_default_library",
    ],
)

go_binary(
    name = "pa_server",
    srcs = ["pa_server.go"],
    deps = PA_SERVER_DEPS,
)

go_image(
    name = "pa_server_image",
    srcs = ["pa_server.go"],
    deps = PA_SERVER_DEPS,
)
