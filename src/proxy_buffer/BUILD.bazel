# Copyright lowRISC contributors (OpenTitan project).
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_test")
load("@io_bazel_rules_docker//container:container.bzl", "container_push")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")

package(default_visibility = ["//visibility:public"])

# Note: running this target: bazel run //src/proxy_buffer:proxybuffer_push
# pushes the image from the above `proxybuffer` to the Google Container
# Registry.
# If you get an error related to the containerregistry API not being
# accessible, you can enable this API using the following cmd-line:
# $ gcloud --project=opentitan-provisioning services enable containerregistry.googleapis.com
container_push(
    name = "proxybuffer_push",
    format = "Docker",
    image = ":pb_server_image",
    registry = "gcr.io",
    # opentitan-provisioning is the name of the GCP project.
    repository = "opentitan-provisioning/proxybuffer",
    tag = "dev",
)

PB_SERVER_DEPS = [
    "//src/proxy_buffer/proto:proxy_buffer_go_pb",
    "//src/proxy_buffer/services:proxybuffer",
    "//src/proxy_buffer/store:db",
    "//src/proxy_buffer/store:filedb",
    "//src/transport:grpconn",
    "@org_golang_google_grpc//:go_default_library",
]

go_binary(
    name = "pb_server",
    srcs = ["pb_server.go"],
    deps = PB_SERVER_DEPS,
)

go_image(
    name = "pb_server_image",
    srcs = ["pb_server.go"],
    static = "on",
    deps = PB_SERVER_DEPS,
)

go_test(
    name = "pb_server_integration_test",
    srcs = ["pb_server_integration_test.go"],
    tags = ["integration"],
    deps = [
        "//src/proto:device_id_go_pb",
        "//src/proto:device_testdata",
        "//src/proxy_buffer/proto:proxy_buffer_go_pb",
        "@com_github_google_go_cmp//cmp",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//testing/protocmp",
    ],
)
