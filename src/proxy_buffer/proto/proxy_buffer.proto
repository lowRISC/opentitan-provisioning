// Copyright lowRISC contributors (OpenTitan project).
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

// Proxy/buffer service definition.

syntax = "proto3";

package proxy_buffer;

import "src/proto/registry_record.proto";

option go_package = "proxy_buffer_go_bp";

service ProxyBufferService {
  // Registers a device.
  rpc RegisterDevice(DeviceRegistrationRequest)
    returns (DeviceRegistrationResponse) {}
}

enum DeviceRegistrationStatus {
  // Unspecified.
  DEVICE_REGISTRATION_STATUS_UNSPECIFIED = 0;
  // Success.
  DEVICE_REGISTRATION_STATUS_SUCCESS = 1;
  // Failures.
  DEVICE_REGISTRATION_STATUS_BAD_REQUEST = 2;
  DEVICE_REGISTRATION_STATUS_BUFFER_FULL = 3;
}

message DeviceRegistrationRequest {
  ot.RegistryRecord record = 1;
}

message DeviceRegistrationResponse {
  DeviceRegistrationStatus status = 1;
  string device_id = 2;
}
