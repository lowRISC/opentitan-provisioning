// Copyright lowRISC contributors (OpenTitan project).
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

// Proxy/buffer service definition.
syntax = "proto3";

package crypto.cert;

import "src/proto/crypto/ecdsa.proto";

option go_package = "cert_go_bp";

// Certificate configuration parameters.
message CertParams {
  // Certificate signing key Secure Provisioning Module (SPM) handle. Required.
  // The signing key is expected to be provisioned in the SPM.
  bytes key_handle = 1;

  // Certificate serial number. Optional.
  bytes serial_number = 2;

  // Certificate not before timestamp in UNIX epoch time format. Optional.
  int64 not_before_timestamp_usec = 3;

  // Certificate not after timestamp in UNIX epoch time format. Optional.
  int64 not_after_timestamp_usec = 4;
}

// A Certificate.
message Certificate {
  // Opaque bytes that may be used to represent a complete certificate, or only
  // the TBS (To Be Signed) portion.
  //
  // Protobuf knows nothing about internal structure of this blob;
  // that's handled at a higher level, not by protobuf.
  // See https://pkg.go.dev/crypto/x509#CreateCertificate for details.
  bytes blob = 1;
}

// Certificate signing key parameters.
message SigningKeyParams {
  // Certificate signing key Secure Provisioning Module (SPM) handle. Required.
  // The signing key is expected to be provisioned in the HSM.
  string key_label = 1;

  oneof key {
    // ECDSA key format.
    crypto.ecdsa.EcdsaParams ecdsa_params = 2;
  }
}
