// Copyright lowRISC contributors (OpenTitan project).
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

// Proxy/buffer service definition.
syntax = "proto3";

package crypto.wrap;

import "src/proto/crypto/ecdsa.proto";
import "src/proto/crypto/rsa_ssa_pcks1.proto";

option go_package = "wrap_go_bp";

// Secret wrapping modes.
enum WrappingMode {
  WRAPPING_MODE_UNSPECIFIED = 0;

  // AES-GCM. IV and Tag size are not configurable.
  WRAPPING_MODE_AES_GCM = 1;

  // AES-KWP.
  WRAPPING_MODE_AES_KWP = 2;
}

// Wrapping key parameters.
message WrappingKeyParams {
  // Token  Secure Provisioning Module (SPM) handle. Required.
  // The key is expected to be provisioned in the SPM.
  bytes key_handle = 1;

  // Secret wrapping mode. Required.
  WrappingMode mode = 2;
}

// Wrapped key.
// Next ID: 7
message WrappedKey {
  // Token  Secure Provisioning Module (SPM) handle.
  // The key is expected to be provisioned in the SPM. It is available in this
  // message to provide a mechanism to track which encryption key was used to
  // wrap the secret.
  bytes key_handle = 1;

  // Secret wrapping mode.
  WrappingMode mode = 2;

  // Encrypted private key in serialized binary format.
  // TODO: Add details on serialized key format for Device consumption.
  bytes payload = 3;

  oneof key_format {
    // RSA key format.
    crypto.rsa.RsaSsaPkcs1KeyFormat rsa_ssa_pcks1 = 4;

    // ECDSA key format.
    crypto.ecdsa.EcdsaKeyFormat ecdsa = 5;
  }

  // The AES-GCM IV
  bytes iv = 6;
}
